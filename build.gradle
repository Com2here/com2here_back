plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'                    // Spring Boot 기본 스타터
    implementation 'org.springframework.boot:spring-boot-starter-web'                // Spring MVC (REST API)
    implementation 'org.springframework.boot:spring-boot-starter-security'           // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'           // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'               // Spring JDBC
    implementation 'org.springframework.boot:spring-boot-starter-validation'         // Bean Validation

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'           // Thymeleaf + Spring Security integration

    // MyBatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Swagger
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.11'

    // Lombok (컴파일 타임 코드 생성)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 개발 편의
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Database Connector
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Spring Cloud OpenFeign (HTTP client)
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.0'

    // OGNL (Expression Language 지원 라이브러리)
    implementation 'ognl:ognl:3.3.4'

    // Cloudflare R2 (S3 API compatible → AWS SDK v2)
    implementation platform('software.amazon.awssdk:bom:2.25.22')                    // AWS SDK BOM for dependency version alignment
    implementation 'software.amazon.awssdk:s3'                                       // AWS SDK S3 client (Cloudflare R2 대응)

    // Spring Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'         // Spring Data Redis
    implementation 'org.springframework.session:spring-session-data-redis'           // Spring Session Redis 통합
    implementation 'redis.clients:jedis:5.2.0'                                       // Redis client (Jedis)
    implementation 'org.apache.commons:commons-pool2:2.11.1'                         // Commons Pool (Jedis 연결 풀)
    implementation 'ru.zinin:tomcat-redis-session:0.8'                               // Tomcat Redis Session 관리
    implementation 'org.springframework.data:spring-data-redis:2.7.5'                // Spring Data Redis
    implementation 'io.lettuce:lettuce-core:6.2.1.RELEASE'                           // Lettuce client

    // Spring Boot Configuration Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava {	options.compilerArgs << '-parameters'}  